spring.application.name=SWP391_D01_G3
# Use the PORT environment variable provided by Render, fallback to 8080 for local
server.port=${PORT:8080}
# Listen on all network interfaces
server.address=0.0.0.0

# Profile configuration
# spring.profiles.active=dev

# These values will be overridden by environment variables on Render
# or by application-dev.properties on local
spring.datasource.url=${SPRING_DATASOURCE_URL}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
#spring.jpa.show-sql=true
#spring.jpa.properties.hibernate.format_sql=true
spring.messages.basename=messages
spring.messages.encoding=UTF-8
server.servlet.session.timeout=30m

# Cau hinh login Google OAuth2
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.scope=email,profile

# Cau hinh Gmail SMTP
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${MAIL_USERNAME}
spring.mail.password=${MAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

## File upload configuration
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB
spring.servlet.multipart.enabled=true

## Static resources configuration for development
#spring.web.resources.cache.period=0
#spring.web.resources.chain.cache=false
#spring.web.resources.static-locations=classpath:/static/
#spring.thymeleaf.cache=false

# Groq/OpenAI Configuration
openai.api.key=${API_KEY}

spring.jpa.hibernate.ddl-auto=update