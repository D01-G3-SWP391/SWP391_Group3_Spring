-- ==========================================
-- üíñ FAVORITE JOBS TABLE CREATION SCRIPT
-- ==========================================

-- T·∫°o b·∫£ng favorite_jobs ƒë·ªÉ l∆∞u tr·ªØ th√¥ng tin favorite jobs c·ªßa student
CREATE TABLE IF NOT EXISTS favorite_jobs (
    favorite_id INT AUTO_INCREMENT PRIMARY KEY,
    student_id INT NOT NULL,
    job_post_id INT NOT NULL,
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    
    -- Unique constraint ƒë·ªÉ tr√°nh duplicate
    UNIQUE KEY unique_student_job (student_id, job_post_id),
    
    -- Foreign key constraints (optional - c√≥ th·ªÉ b·ªè comment n·∫øu mu·ªën enforce)
    -- FOREIGN KEY (student_id) REFERENCES Account(userId) ON DELETE CASCADE,
    -- FOREIGN KEY (job_post_id) REFERENCES Jobs_post(job_post_id) ON DELETE CASCADE,
    
    -- Indexes ƒë·ªÉ t·ªëi ∆∞u performance
    INDEX idx_student_id (student_id),
    INDEX idx_job_post_id (job_post_id),
    INDEX idx_created_at (created_at)
);

-- ==========================================
-- SAMPLE DATA (for testing)
-- ==========================================

-- Th√™m m·ªôt s·ªë data m·∫´u ƒë·ªÉ test (c√≥ th·ªÉ comment l·∫°i n·∫øu kh√¥ng c·∫ßn)
-- INSERT INTO favorite_jobs (student_id, job_post_id) VALUES
-- (1, 1),  -- Student 1 favorite job 1
-- (1, 2),  -- Student 1 favorite job 2  
-- (2, 1),  -- Student 2 favorite job 1
-- (2, 3);  -- Student 2 favorite job 3

-- ==========================================
-- VERIFICATION QUERIES
-- ==========================================

-- Ki·ªÉm tra table ƒë√£ t·∫°o th√†nh c√¥ng
SHOW CREATE TABLE favorite_jobs;

-- Ki·ªÉm tra indexes
SHOW INDEXES FROM favorite_jobs;

-- ƒê·∫øm s·ªë record (should be 0 initially)
SELECT COUNT(*) as total_favorites FROM favorite_jobs; 